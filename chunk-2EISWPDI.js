import{V as s,a as n,la as p}from"./chunk-SJE556VZ.js";var a="user.settings.v1",o=class r{defaults={opengraph:{microlink:{apiKey:void 0},linkpreview:{apiKey:void 0},opengraphio:{appId:void 0}}};_settings=p(this.load());settings=this._settings.asReadonly();load(){try{let t=localStorage.getItem(a);if(!t)return structuredClone(this.defaults);let e=JSON.parse(t);return this.mergeSettings(structuredClone(this.defaults),e)}catch{return structuredClone(this.defaults)}}save(t){try{localStorage.setItem(a,JSON.stringify(t))}catch{}}setMicrolinkApiKey(t){let e=structuredClone(this._settings());e.opengraph.microlink.apiKey=t,this._settings.set(e),this.save(e)}setLinkPreviewApiKey(t){let e=structuredClone(this._settings());e.opengraph.linkpreview.apiKey=t,this._settings.set(e),this.save(e)}setOpenGraphIoAppId(t){let e=structuredClone(this._settings());e.opengraph.opengraphio.appId=t,this._settings.set(e),this.save(e)}clearAllOpenGraph(){let t=structuredClone(this._settings());t.opengraph=structuredClone(this.defaults.opengraph),this._settings.set(t),this.save(t)}getApiConfigOverrides(){let t=this._settings().opengraph,e={};return t.microlink.apiKey!==void 0&&(e.microlink={apiKey:t.microlink.apiKey}),t.linkpreview.apiKey!==void 0&&(e.linkpreview={apiKey:t.linkpreview.apiKey}),t.opengraphio.appId!==void 0&&(e.opengraphio={appId:t.opengraphio.appId}),e}mergeSettings(t,e){if(!e)return t;let i=structuredClone(t);return e.opengraph&&(i.opengraph.microlink=n(n({},i.opengraph.microlink),e.opengraph.microlink??{}),i.opengraph.linkpreview=n(n({},i.opengraph.linkpreview),e.opengraph.linkpreview??{}),i.opengraph.opengraphio=n(n({},i.opengraph.opengraphio),e.opengraph.opengraphio??{})),i}static \u0275fac=function(e){return new(e||r)};static \u0275prov=s({token:r,factory:r.\u0275fac,providedIn:"root"})};export{o as a};
